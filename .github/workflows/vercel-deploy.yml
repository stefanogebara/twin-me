name: Deploy to Vercel

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering from GitHub UI

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Trigger Vercel Deployment

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Trigger Vercel Deploy Hook
        env:
          VERCEL_DEPLOY_HOOK_URL: ${{ secrets.VERCEL_DEPLOY_HOOK_URL }}
        run: |
          echo "üöÄ Triggering Vercel deployment..."
          echo "üìù Commit: ${{ github.sha }}"
          echo "üë§ Author: ${{ github.actor }}"
          echo "üì¶ Branch: ${{ github.ref_name }}"

          if [ -z "$VERCEL_DEPLOY_HOOK_URL" ]; then
            echo "‚ùå ERROR: VERCEL_DEPLOY_HOOK_URL secret is not set"
            echo "Please add the Deploy Hook URL to GitHub Secrets"
            exit 1
          fi

          RESPONSE=$(curl -X POST "$VERCEL_DEPLOY_HOOK_URL" \
            -H "Content-Type: application/json" \
            -w "\n%{http_code}" \
            -s)

          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          BODY=$(echo "$RESPONSE" | sed '$d')

          echo "üìä HTTP Response Code: $HTTP_CODE"
          echo "üìÑ Response Body: $BODY"

          if [ "$HTTP_CODE" = "201" ] || [ "$HTTP_CODE" = "200" ]; then
            echo "‚úÖ Deployment triggered successfully!"

            # Extract job ID if available
            JOB_ID=$(echo "$BODY" | grep -o '"job":{"id":"[^"]*"' | grep -o 'id":"[^"]*"' | cut -d'"' -f3)
            if [ -n "$JOB_ID" ]; then
              echo "üÜî Deployment Job ID: $JOB_ID"
            fi
          else
            echo "‚ùå Failed to trigger deployment"
            exit 1
          fi

      - name: Deployment Status
        if: success()
        run: |
          echo "‚úÖ Deployment workflow completed"
          echo "üîó Check status at: https://vercel.com/datalake-9521s-projects/twin-ai-learn"
